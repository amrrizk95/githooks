name: Test and Deploy Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOTNET_VERSION: '7.x'  # .NET Core version to use
  BUILD_CONFIGURATION: 'Release'  # Build configuration
  BUILD_OUTPUT_PATH: '**/bin/Release/net8.0/**'  # Path to build output
  NUGET_CACHE_PATH: ~/.nuget/packages  # Path to NuGet cache

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache .NET dependencies
        uses: actions/cache@v3
        with:
          path: ${{env.NUGET_CACHE_PATH}}
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}} # Replace with your target .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

      - name: Run tests
        run: dotnet test --no-build --configuration ${{ env.BUILD_CONFIGURATION }} --verbosity normal

      - name: Save Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ env.BUILD_OUTPUT_PATH }}
          include-hidden-files: true
          if-no-files-found: warn

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Deploy Project
        env:
          DEPLOYMENT_TOKEN:${{secrets.DEPLOYMENT_TOKEN}}
        run: echo "Deploying project with artifacts from ${{ env.BUILD_OUTPUT_PATH }}"
